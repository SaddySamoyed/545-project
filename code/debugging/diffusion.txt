现在, 我从一个 batch of 20 (image_path, caption) pairs 中提取出了和关键词关联的 masks, 每个 mask 的格式是 
{img_ID}-{keyword}.jpg




我们现在, 想要对刚才生成的所有 masks 和其对应的图片, 进行一个 stable diffusion inpainting.

```
!pip install diffusers
from diffusers import StableDiffusionInpaintPipeline
#@title stable diffusion
model_id = "runwayml/stable-diffusion-inpainting"
pipe = StableDiffusionInpaintPipeline.from_pretrained(model_id, torch_dtype=torch.float16)
device = "cuda" if torch.cuda.is_available() else "cpu"
pipe = pipe.to(device)
outputfolder = "OutputImageFolder"
os.makedirs(outputfolder, exist_ok=True)
```

其中, 单个 image 的 diffusion 是这样的:
# load image
# Load your input image
input_image_path = "/..."  # Replace with your image file path
image = Image.open(input_image_path).convert("RGB")


for label in label_detected:
    mask_path = f"mask_{label}.png"
    mask_path = os.path.join(maskFolder, mask_path)
    mask = Image.open(mask_path).convert("RGB")
    output_image_path = f"output_{label}.png"
    output_image_path = os.path.join(outputfolder, output_image_path)

    result = pipe(prompt=prompt, image=image, mask_image=mask).images[0]

    result.save(output_image_path)


我们把 diffusion 生成的图片, 保存为和 mask 相同的名字.


注意, 我的 label 格式并不是这样的
valid_labels_per_image = {
    57870: ["dining table", "chair"],
    57871: ["person", "cake"]
}
而是在同一个 batch 里, 不根据 img_id 而是 batch list 的 list 顺序: 存成了一个 list of dicts.
caption_data = 
[
	{},
	{'person': 'person', 'cake': 'cake'},
	{},
	{},
	{},
	{'person': 'person'},
	{},
	{'person': 'person', 'bus': 'bus'},
	{'bicycle': 'bicycle'},
	{'person': 'person'},
	{},
	{'person': 'person'},
	{'chair': 'chair', 'dining table': 'dining table'},
	{},
	{'person': 'person'},
	{'person': 'person', 'laptop': 'laptop'},
	{'person': 'person', 'dining table': 'dining table'},
	{},
	{},
	{'vase': 'vase', 'dining table': 'dining table'}
]

（空出来的部分表示这个 caption 里没有关键词）

